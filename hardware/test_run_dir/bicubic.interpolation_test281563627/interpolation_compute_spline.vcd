$version Generated by VerilatedVcd $end
$date Tue May 17 22:48:11 2022
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 2 clock $end
  $var wire 32 8 io_coefficient_0 [31:0] $end
  $var wire 32 9 io_coefficient_1 [31:0] $end
  $var wire 32 B io_coefficient_10 [31:0] $end
  $var wire 32 C io_coefficient_11 [31:0] $end
  $var wire 32 D io_coefficient_12 [31:0] $end
  $var wire 32 E io_coefficient_13 [31:0] $end
  $var wire 32 F io_coefficient_14 [31:0] $end
  $var wire 32 G io_coefficient_15 [31:0] $end
  $var wire 32 : io_coefficient_2 [31:0] $end
  $var wire 32 ; io_coefficient_3 [31:0] $end
  $var wire 32 < io_coefficient_4 [31:0] $end
  $var wire 32 = io_coefficient_5 [31:0] $end
  $var wire 32 > io_coefficient_6 [31:0] $end
  $var wire 32 ? io_coefficient_7 [31:0] $end
  $var wire 32 @ io_coefficient_8 [31:0] $end
  $var wire 32 A io_coefficient_9 [31:0] $end
  $var wire  8 4 io_i_in [7:0] $end
  $var wire  8 I io_i_out [7:0] $end
  $var wire  8 H io_interpolation_compute_spline [7:0] $end
  $var wire  8 5 io_j_in [7:0] $end
  $var wire  8 J io_j_out [7:0] $end
  $var wire  8 6 io_x_in [7:0] $end
  $var wire  8 K io_x_out [7:0] $end
  $var wire  8 7 io_y_in [7:0] $end
  $var wire  8 L io_y_out [7:0] $end
  $var wire  1 3 reset $end
  $scope module interpolation_compute_spline $end
   $var wire  1 2 clock $end
   $var wire  8 $ i_1 [7:0] $end
   $var wire  8 ) i_2 [7:0] $end
   $var wire  8 . i_3 [7:0] $end
   $var wire 32 8 io_coefficient_0 [31:0] $end
   $var wire 32 9 io_coefficient_1 [31:0] $end
   $var wire 32 B io_coefficient_10 [31:0] $end
   $var wire 32 C io_coefficient_11 [31:0] $end
   $var wire 32 D io_coefficient_12 [31:0] $end
   $var wire 32 E io_coefficient_13 [31:0] $end
   $var wire 32 F io_coefficient_14 [31:0] $end
   $var wire 32 G io_coefficient_15 [31:0] $end
   $var wire 32 : io_coefficient_2 [31:0] $end
   $var wire 32 ; io_coefficient_3 [31:0] $end
   $var wire 32 < io_coefficient_4 [31:0] $end
   $var wire 32 = io_coefficient_5 [31:0] $end
   $var wire 32 > io_coefficient_6 [31:0] $end
   $var wire 32 ? io_coefficient_7 [31:0] $end
   $var wire 32 @ io_coefficient_8 [31:0] $end
   $var wire 32 A io_coefficient_9 [31:0] $end
   $var wire  8 4 io_i_in [7:0] $end
   $var wire  8 I io_i_out [7:0] $end
   $var wire  8 H io_interpolation_compute_spline [7:0] $end
   $var wire  8 5 io_j_in [7:0] $end
   $var wire  8 J io_j_out [7:0] $end
   $var wire  8 6 io_x_in [7:0] $end
   $var wire  8 K io_x_out [7:0] $end
   $var wire  8 7 io_y_in [7:0] $end
   $var wire  8 L io_y_out [7:0] $end
   $var wire  8 % j_1 [7:0] $end
   $var wire  8 * j_2 [7:0] $end
   $var wire  8 / j_3 [7:0] $end
   $var wire  1 3 reset $end
   $var wire 32 # temp_1 [31:0] $end
   $var wire 32 ( temp_2 [31:0] $end
   $var wire 32 - temp_3 [31:0] $end
   $var wire  8 & x_1 [7:0] $end
   $var wire  8 + x_2 [7:0] $end
   $var wire  8 0 x_3 [7:0] $end
   $var wire  8 ' y_1 [7:0] $end
   $var wire  8 , y_2 [7:0] $end
   $var wire  8 1 y_3 [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000 $
b00000000 %
b00000000 &
b00000000 '
b00000000000000000000000000000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000000000000000000000000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
02
13
b00000000 4
b00000000 5
b00000000 6
b00000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000 H
b00000000 I
b00000000 J
b00000000 K
b00000000 L
#1
12
#2
02
#3
12
#4
02
#5
12
#6
02
#7
12
#8
02
#9
12
#10
02
03
#11
12
#12
02
b00000001 4
b00000001 5
b00000000000000000000111110010000 8
b00000000000000000000000000001000 9
b00000000000000000000000001100000 :
b11111111111111111111111111001000 ;
b00000000000000000000000000010000 <
b11111111111111111111111111111100 =
b11111111111111111111111111001000 >
b00000000000000000000000000101100 ?
b00000000000000000000000001100000 @
b11111111111111111111111111111100 A
b11111111111111111111111100001100 B
b00000000000000000000000001111000 C
b11111111111111111111111111000000 D
b00000000000000000000000000001000 E
b00000000000000000000000010001100 F
b11111111111111111111111110111100 G
#13
b00000000000000000000111110010000 #
b00000001 $
b00000001 %
12
#14
02
b00000001 6
#15
b00000000000000000000111110011000 #
b00000001 &
b00000000000000000000000011111001 (
b00000001 )
b00000001 *
12
#16
02
b00000010 6
#17
b00000000000000000000111110101100 #
b00000010 &
b00000001 +
b00000000000000000000000011111001 -
b00000001 .
b00000001 /
12
b11111001 H
b00000001 I
b00000001 J
#18
02
b00000011 6
#19
b00000000000000000000111111001100 #
b00000011 &
b00000000000000000000000011111010 (
b00000010 +
b00000001 0
12
b00000001 K
#20
02
b00000000 6
b00000000000000000000010111100000 8
b11111111111111111111111111000000 9
b00000000000000000000000101110000 :
b11111111111111111111111101000000 ;
b11111111111111111111111111110000 <
b11111111111111111111111111100000 =
b00000000000000000000000001111000 >
b11111111111111111111111111001000 ?
b00000000000000000000000011100000 @
b00000000000000000000000110010100 A
b11111111111111111111111101110100 B
b11111111111111111111111110101000 C
b11111111111111111111111110100000 D
b11111111111111111111111100000100 E
b11111111111111111111111110010100 F
b00000000000000000000000010111000 G
#21
b00000000000000000000010111100000 #
b00000000 &
b00000000000000000000000011111100 (
b00000011 +
b00000000000000000000000011111010 -
b00000010 0
12
b11111010 H
b00000010 K
#22
02
b00000001 6
#23
b00000000000000000000010111100100 #
b00000001 &
b00000000000000000000000001011110 (
b00000000 +
b00000000000000000000000011111100 -
b00000011 0
12
b11111100 H
b00000011 K
#24
02
b00000010 6
#25
b00000000000000000000011000000100 #
b00000010 &
b00000001 +
b00000000000000000000000001011110 -
b00000000 0
12
b01011110 H
b00000000 K
#26
02
b00000011 6
#27
b00000000000000000000011000101110 #
b00000011 &
b00000000000000000000000001100000 (
b00000010 +
b00000001 0
12
b00000001 K
#28
02
#29
b00000000000000000000000001100010 (
b00000011 +
b00000000000000000000000001100000 -
b00000010 0
12
b01100000 H
b00000010 K
#30
02
#31
b00000000000000000000000001100010 -
b00000011 0
12
b01100010 H
b00000011 K
#32
02
#33
12
#34
02
#35
12
