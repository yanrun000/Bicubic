$version Generated by VerilatedVcd $end
$date Wed May 11 22:48:40 2022
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 # clock $end
  $var wire 32 5 io_coefficient_0 [31:0] $end
  $var wire 32 6 io_coefficient_1 [31:0] $end
  $var wire 32 ? io_coefficient_10 [31:0] $end
  $var wire 32 @ io_coefficient_11 [31:0] $end
  $var wire 32 A io_coefficient_12 [31:0] $end
  $var wire 32 B io_coefficient_13 [31:0] $end
  $var wire 32 C io_coefficient_14 [31:0] $end
  $var wire 32 D io_coefficient_15 [31:0] $end
  $var wire 32 7 io_coefficient_2 [31:0] $end
  $var wire 32 8 io_coefficient_3 [31:0] $end
  $var wire 32 9 io_coefficient_4 [31:0] $end
  $var wire 32 : io_coefficient_5 [31:0] $end
  $var wire 32 ; io_coefficient_6 [31:0] $end
  $var wire 32 < io_coefficient_7 [31:0] $end
  $var wire 32 = io_coefficient_8 [31:0] $end
  $var wire 32 > io_coefficient_9 [31:0] $end
  $var wire  8 % io_pix_0 [7:0] $end
  $var wire  8 & io_pix_1 [7:0] $end
  $var wire  8 / io_pix_10 [7:0] $end
  $var wire  8 0 io_pix_11 [7:0] $end
  $var wire  8 1 io_pix_12 [7:0] $end
  $var wire  8 2 io_pix_13 [7:0] $end
  $var wire  8 3 io_pix_14 [7:0] $end
  $var wire  8 4 io_pix_15 [7:0] $end
  $var wire  8 ' io_pix_2 [7:0] $end
  $var wire  8 ( io_pix_3 [7:0] $end
  $var wire  8 ) io_pix_4 [7:0] $end
  $var wire  8 * io_pix_5 [7:0] $end
  $var wire  8 + io_pix_6 [7:0] $end
  $var wire  8 , io_pix_7 [7:0] $end
  $var wire  8 - io_pix_8 [7:0] $end
  $var wire  8 . io_pix_9 [7:0] $end
  $var wire  1 $ reset $end
  $scope module coefficient_compute_spline $end
   $var wire  1 # clock $end
   $var wire 32 5 io_coefficient_0 [31:0] $end
   $var wire 32 6 io_coefficient_1 [31:0] $end
   $var wire 32 ? io_coefficient_10 [31:0] $end
   $var wire 32 @ io_coefficient_11 [31:0] $end
   $var wire 32 A io_coefficient_12 [31:0] $end
   $var wire 32 B io_coefficient_13 [31:0] $end
   $var wire 32 C io_coefficient_14 [31:0] $end
   $var wire 32 D io_coefficient_15 [31:0] $end
   $var wire 32 7 io_coefficient_2 [31:0] $end
   $var wire 32 8 io_coefficient_3 [31:0] $end
   $var wire 32 9 io_coefficient_4 [31:0] $end
   $var wire 32 : io_coefficient_5 [31:0] $end
   $var wire 32 ; io_coefficient_6 [31:0] $end
   $var wire 32 < io_coefficient_7 [31:0] $end
   $var wire 32 = io_coefficient_8 [31:0] $end
   $var wire 32 > io_coefficient_9 [31:0] $end
   $var wire  8 % io_pix_0 [7:0] $end
   $var wire  8 & io_pix_1 [7:0] $end
   $var wire  8 / io_pix_10 [7:0] $end
   $var wire  8 0 io_pix_11 [7:0] $end
   $var wire  8 1 io_pix_12 [7:0] $end
   $var wire  8 2 io_pix_13 [7:0] $end
   $var wire  8 3 io_pix_14 [7:0] $end
   $var wire  8 4 io_pix_15 [7:0] $end
   $var wire  8 ' io_pix_2 [7:0] $end
   $var wire  8 ( io_pix_3 [7:0] $end
   $var wire  8 ) io_pix_4 [7:0] $end
   $var wire  8 * io_pix_5 [7:0] $end
   $var wire  8 + io_pix_6 [7:0] $end
   $var wire  8 , io_pix_7 [7:0] $end
   $var wire  8 - io_pix_8 [7:0] $end
   $var wire  8 . io_pix_9 [7:0] $end
   $var wire  1 $ reset $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
1$
b00000000 %
b00000000 &
b00000000 '
b00000000 (
b00000000 )
b00000000 *
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
#1
1#
#2
0#
#3
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
0#
0$
b11111011 %
b11111010 &
b11111011 '
b11111010 (
b11111011 )
b11111001 *
b11111100 +
b11111101 ,
b11111010 -
b11111100 .
b11111011 /
b11111100 0
b11111100 1
b11111011 2
b11111010 3
b11111110 4
b00000000000000000000111110010000 5
b00000000000000000000000000001000 6
b00000000000000000000000001100000 7
b11111111111111111111111111001000 8
b00000000000000000000000000010000 9
b11111111111111111111111111111100 :
b11111111111111111111111111001000 ;
b00000000000000000000000000101100 <
b00000000000000000000000001100000 =
b11111111111111111111111111111100 >
b11111111111111111111111100001100 ?
b00000000000000000000000001111000 @
b11111111111111111111111111000000 A
b00000000000000000000000000001000 B
b00000000000000000000000010001100 C
b00000000000000000001111110111100 D
#11
1#
#12
0#
#13
1#
#14
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
1#
